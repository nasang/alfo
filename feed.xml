<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://nasang.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://nasang.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-11-30T22:13:28+00:00</updated><id>https://nasang.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">CS 61B Data Structures, Spring 2023 Notes</title><link href="https://nasang.github.io/blog/2024/CS61B/" rel="alternate" type="text/html" title="CS 61B Data Structures, Spring 2023 Notes"/><published>2024-10-20T17:00:00+00:00</published><updated>2024-10-20T17:00:00+00:00</updated><id>https://nasang.github.io/blog/2024/CS61B</id><content type="html" xml:base="https://nasang.github.io/blog/2024/CS61B/"><![CDATA[<h1 id="1-intro">1. Intro</h1> <h2 id="11-java">1.1 Java</h2> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hello world!"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <p>Java is an <strong>object oriented language</strong> with strict requirements:</p> <ul> <li>Every Java file must contain a <strong>class</strong> declaration*.</li> <li><strong>All code</strong> lives inside a class*, even helper functions, global constants, etc.</li> <li>To run a Java program, you typically define a <strong>main method</strong> using <code class="language-plaintext highlighter-rouge">public static void main(String[] args)</code></li> </ul> <p>*: This is not completely true, e.g. we can also declare “interfaces” in .java files that may contain code.</p> <p>Java is <strong>statically typed</strong></p> <ul> <li>All variables, parameters, and methods must have a <strong>declared type</strong>.</li> <li>That type can <strong>never change</strong>.</li> <li>Expressions also have a type, e.g. “larger(5, 10) + 3” has type int.</li> <li>The compiler checks that all the types in your program are compatible <strong>before</strong> the program ever runs.</li> </ul> <h2 id="12-java-workflow">1.2 Java workflow</h2> <p><img src="1/compilation.png" alt="compilation" w="500" h="300"/></p> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>javac HelloWorld.java
<span class="nv">$ </span>java HelloWorld
Hello World! 
</code></pre></div></div> <p>Why make a class file at all?</p> <ul> <li>class file has been type checked. Distributed code is <strong>safer</strong>.</li> <li>class files are ‘simpler’ for machine to execute. Distributed code is <strong>faster</strong>.</li> </ul> <h1 id="2-classes-lists-arrays-maps">2. Classes, Lists, Arrays, Maps</h1> <h2 id="21-classes">2.1 Classes</h2> <ul> <li>Classes can contain not just functions (a.k.a. <strong>methods</strong>), but also data (a.k.a. <strong>variables</strong>).</li> <li>Classes can be instantiated as <strong>objects</strong>.</li> </ul> <p>Static vs. Non-Static Members</p> <ul> <li>A variable or method defined in a class is also called a <strong>member</strong> of that class.</li> <li>A class may have a mix of <strong>static</strong> and <strong>non-static</strong> members. <ul> <li>Static members are accessed using class name.</li> <li>Non-static members cannot be invoked using class name.</li> <li>Static methods must access instance variables via a specific instance.</li> </ul> </li> </ul> <h2 id="22-lists">2.2 Lists</h2> <blockquote> <p>A <strong>list</strong> is an ordered sequence of objects.</p> </blockquote> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ListDemo</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="no">L</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="no">L</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"a"</span><span class="o">);</span> 
        <span class="no">L</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"b"</span><span class="o">);</span> 
        <span class="nc">String</span> <span class="n">x</span> <span class="o">=</span> <span class="no">L</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <ul> <li><strong>List</strong> in Java is <strong>Abstract Data Type (ADT)</strong></li> <li>Each implementation, e.g. <strong>LinkedList</strong>, is known as a <strong>Concrete Implementation</strong>. <ul> <li>Code for different types of list may be radically different.</li> <li>All concrete implementations have at least <a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/List.html">the operations guaranteed by every List</a>.</li> </ul> </li> </ul> <p><img src="2/list.png" alt="list" w="400" h="200"/></p> <h2 id="23-arrays">2.3 Arrays</h2> <blockquote> <p>A <strong>array</strong> is a restricted version of the list ADT.</p> <ul> <li>Size that must be declared at the time the array is created.</li> <li>Size cannot change.</li> <li>No methods.</li> </ul> </blockquote> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ArrayDemo</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">x</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="mi">5</span><span class="o">];</span> <span class="c1">// size 5</span>
        <span class="n">x</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="s">"a"</span><span class="o">;</span>
        <span class="n">x</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="s">"b"</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">x</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <h2 id="24-maps">2.4 Maps</h2> <blockquote> <p>A <strong>map</strong> is collection of key-value pairs. Each key is guaranteed to be unique.</p> </blockquote> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.TreeMap</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MapDemo</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="no">L</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TreeMap</span><span class="o">&lt;&gt;();</span>
        <span class="no">L</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"dog"</span><span class="o">,</span> <span class="s">"woof"</span><span class="o">);</span>
        <span class="no">L</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"cat"</span><span class="o">,</span> <span class="s">"meow"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">sound</span> <span class="o">=</span> <span class="no">L</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"cat"</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <p>The most common Map implementations are <strong>TreeMap</strong> and <strong>HashMap</strong>.</p> <ul> <li>Python uses an ArrayList (without telling you).</li> <li>Python uses a HashMap (without telling you).</li> </ul>]]></content><author><name></name></author><category term="data"/><category term="structures"/><summary type="html"><![CDATA[data structures]]></summary></entry></feed>